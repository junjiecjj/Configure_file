 bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color | *-256color) color_prompt=yes ;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    #[jack@unix:~16:43:55]$ 形式的
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[31;1m\]]\[\033[01;32m\]\$ '
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[01;31m\]]\n\[\e[01;31m\]$\[\e[01;32m\] '
    PS1='${debian_chroot:+($debian_chroot)}\[\e[01;34m\]# \[\e[01;36m\]\u\[\e[01;37m\] @ \[\e[01;31m\]\H \[\e[01;37m\]in \[\e[01;33m\]\w \[\e[01;32m\][日期: \[\e[01;31m\]周\d日\[\e[01;37m\], \[\e[01;32m\]时间: \[\e[01;31m\]\t\[\e[01;32m\]]\n\[\e[01;31m\]\$\[\e[01;32m\] '
else
    #[jack@unix:~16:43:55]$ 形式的
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[31;1m\]]\[\033[01;32m\]\$ '
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[31;1m\]]\[\033[01;32m\]\$ '
    PS1='${debian_chroot:+($debian_chroot)}\[\e[01;34m\]# \[\e[01;36m\]\u\[\e[01;37m\] @ \[\e[01;31m\]\H \[\e[01;37m\]in \[\e[01;33m\]\w \[\e[01;32m\][日期: \[\e[01;31m\]周\d日\[\e[01;37m\], \[\e[01;32m\]时间: \[\e[01;31m\]\t\[\e[01;32m\]]\n\[\e[01;31m\]\$\[\e[01;32m\] '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm* | rxvt*)
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[31;1m\]]\[\033[01;32m\]\$ '
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\][\u@\h\[\033[01m\]:\[\033[01;33m\]\w\[\033[01;36m\]\t\[\e[31;01m\]]\n\[\e[01;31m\]$\[\e[01;32m\] '
    PS1='${debian_chroot:+($debian_chroot)}\[\e[01;34m\]# \[\e[01;36m\]\u\[\e[01;37m\] @ \[\e[01;31m\]\H \[\e[01;37m\]in \[\e[01;33m\]\w \[\e[01;32m\][日期: \[\e[01;31m\]周\d日\[\e[01;37m\], \[\e[01;32m\]时间: \[\e[01;31m\]\t\[\e[01;32m\]]\n\[\e[01;31m\]\$\[\e[01;32m\] '
    ;;
*) ;;
esac

case ${TERM} in

  xterm*|rxvt*|Eterm|aterm|kterm|gnome*)
     PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"'

    ;;
  screen*)
    PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033_%s@%s:%s\033\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"'
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#命令别名 {{{
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias grep='grep --color=auto'
alias pacman='sudo pacman-color'
alias p='sudo pacman-color'
alias y='yaourt'
alias h='htop'
alias als='alsamixer'
alias nf='neofetch'
alias sf='screenfetch'

#历史命令 top10
alias top10='print -l  ${(o)history%% *} | uniq -c | sort -nr | head -n 10'


# alias ll='ls -alF --color=auto -h'
# alias la='ls -A --color=auto -h'
# alias l='ls -CF --color=auto -h'
# alias ls='ls -l --color=auto -h'
alias fc='ls -al | grep "^-" | wc -l'
alias fdc='ls -alR | grep "^-" | wc -l'
alias dc='ls -al | grep "^d" | wc -l'

# alias ld='lsd'
# alias lsd='lsd -alFhv'
# alias lt='lsd -al --tree'

alias a='lsd --icon-theme=fancy'
alias as='lsd -l --icon-theme=fancy'
alias aa='lsd -Al --icon-theme=fancy'
alias al='lsd -al --icon-theme=fancy'
alias ad='lsd -alFhv --icon-theme=fancy'
alias at='lsd --tree -alFhv --icon-theme=fancy'


# alias o='logo-ls -h'
# alias os='logo-ls -lh'
# alias oa='logo-ls -Alh'
# alias ol='logo-ls -alh'

alias l='logo-ls -h'
alias ls='logo-ls -lh'
alias la='logo-ls -Alh'
alias ll='logo-ls -alh'



# alias el='exa -lh --icons --colour-scale'
# alias e='exa -lh --icons --colour-scale'
# alias er='exa -lh -R --icons --colour-scale'
# alias et='exa -lh -T --icons --colour-scale'
# alias ee='exa -abghHliSr  --icons --colour-scale'
# alias eer='exa -abghHliSr -R  --icons --colour-scale'
# alias eet='exa -abghHliSr -T --icons --colour-scale'

alias e='exa  --icons --colour-scale --color=always'
alias es='exa -lh  --icons --colour-scale --color=always --time=changed --git'
alias ea='exa -alh  --icons --colour-scale --color=always'
alias el='exa -al -bghHiSr  --icons --colour-scale --color=always  --time=changed --git'
alias et='exa -al -bghHiSr -T --icons --colour-scale --color=always  --time=changed --git'



alias bat='batcat'
alias fd='fdfind'

alias cc='cd ~/公共的/c文件/'
alias cl='cd ~/公共的/Linux_C'
alias cg='cd ~/公共的/'
alias cf='cd ~/文档/'
alias cs='cd ~/公共的/ShellScript/'
alias cP='cd ~/公共的/Python/'
alias cm='cd ~/公共的/MarkDown/'
alias cmat='cd ~/公共的/MATLAB/'
alias gos='git add .; git commit -m "just update"; git push origin master'
alias gom='git add .; git commit -m "just update"; git push origin main'


alias creatfont='sudo mkfontscale; sudo mkfontdir; sudo fc-cache -fv'

mkd() { mkdir -p "$@" && cd "$1"; }
alias install='sudo apt install'
alias update='sudo apt update'
alias upgrade='sudo apt upgrade -y'
alias up='sudo apt update ; sudo apt upgrade -y; sudo apt autoremove -y'
alias show_dimensions='xdpyinfo | grep '''dimensions:''''
alias list_repos='grep ^[^#] /etc/apt/sources.list /etc/apt/sources.list.d/*'

alias nalainstall='sudo nala install'
alias nalaupdate='sudo nala update'
alias nalaupgrade='sudo nala upgrade'
alias nalaremove='sudo nala remove'
alias nalapurge='sudo nala purge'
alias nalafetch='sudo nala fetch'
alias nalashow='sudo nala show'
alias nalaclean='sudo nala clean'
alias nalahistory='sudo nala history'
alias nalaup='sudo nala update ; sudo nala upgrade'


alias lsblk='lsblk -f'
alias df='df -Thl'

alias v='vim'
alias nm='nvim'

alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


alias rcd=ranger-cd

alias racd='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'



export LESS_TERMCAP_mb=$'\E[01;34m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;36;44m'
export LESS_TERMCAP_se=$'\E[0m'

man() {
  env \
  LESS_TERMCAP_mb=$(printf "\e[1;31m") \
  LESS_TERMCAP_md=$(printf "\e[1;31m") \
  LESS_TERMCAP_me=$(printf "\e[0m") \
  LESS_TERMCAP_se=$(printf "\e[0m") \
  LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
  LESS_TERMCAP_ue=$(printf "\e[0m") \
  LESS_TERMCAP_us=$(printf "\e[1;32m") \
  man "$@"
}

lg()
{
    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

    lazygit "$@"

    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
            cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
            rm -f $LAZYGIT_NEW_DIR_FILE > /dev/null
    fi
}

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/snap/bin:$PATH"
# eval "$(starship init bash)"
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

export PATH="/home/jack/anaconda3/bin:$PATH"
# commented out by conda initialize
export PATH=~/Qt5.9.9/Tools/QtCreator/bin:$PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/jack/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/jack/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/jack/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/jack/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


[[ -s /home/jack/.autojump/etc/profile.d/autojump.sh ]] && source /home/jack/.autojump/etc/profile.d/autojump.sh
LANG=zh_CN.UTF-8
LANGUAGE=zh_CN.UTF-8


source <(kitty + complete setup bash)
# Change ls colours
LS_COLORS="ow=01;36;40" && export LS_COLORS

export DISPLAY=localhost:0
export DISPLAY=:0.0
export EDITOR=/usr/bin/vim

export LC_ALL=zh_CN.UTF-8
export LANG=zh_CN.UTF-8
export LANGUAGE=zh_CN:en_US
export LC_CTYPE=en_US.UTF-8

export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx


export TERM=xterm-256color
LS_COLORS="di=01;04;33:fi=01;32;40:ln=01;36:so=00;36:bd=05;95:cd=05;95:mi=00;90:*.md=01;36:*.docx=01;92:*.doc=01;92:*.pdf=01;92:*.tex=01;92:*.c=01;34:*.cpp=01;34:*.ex=00;91"
source "$HOME/.cargo/env"



[ -f ~/.fzf.bash ] && source ~/.fzf.bash




if command -v theme.sh > /dev/null; then
   	[ -e ~/.theme_history ] && theme.sh "$(theme.sh -l|tail -n1)"

	# Optional

	#Binds C-o to the previously active theme.
	bind -x '"\C-o":"theme.sh $(theme.sh -l|tail -n2|head -n1)"'

	alias th='theme.sh -i'

	# Interactively load a light theme
	alias thl='theme.sh --light -i'

	# Interactively load a dark theme
	alias thd='theme.sh --dark -i'
fi

# theme.sh  gruvbox-mix-light-medium
# theme.sh desert-night
# theme.sh mono-amber
# theme.sh elic
# theme.sh apathy
# theme.sh desert
# theme.sh darcula
# theme.sh urple
# theme.sh unikitty-dark

# theme.sh solarized-dark-higher-contrast
# theme.sh  elementary
# theme.sh   warm-neon
# theme.sh pico
# theme.sh tango
# theme.sh mellow-purple
# theme.sh yachiyo
# theme.sh windows-nt
# theme.sh solarized-darcula
# theme.sh freya
# theme.sh solarized-light
# theme.sh molokai
# theme.sh vs-code-dark-plus
# theme.sh goa-base
# theme.sh mathias
# theme.sh vag
# theme.sh aco
# theme.sh man-page
# theme.sh papercolor-light
# theme.sh solarized-light
# theme.sh syntax-midnight-light
# theme.sh edge-light
# theme.sh belafonte-day
theme.sh tokyo-day

#>>>>>>下面根据当前时间自动随机选择主题
light_theme=(gruvbox-mix-light-medium tokyo-day belafonte-day edge-light ayu-light terminal-basic clrs novel synth-midnight-light solarized-light windows-95-light   papercolor-light gruvbox-light-soft  novel)
L1=${#light_theme[*]}
# echo -e "L1 = ${L1}\n"
index1=$(((${RANDOM} % ${L1}+1)))
# echo -e "index1 = ${index1}\n"

dark_theme=(desert-night tango mellow-purple freya mathias goa-base vs-code-dark-plus  molokai yachiyo solarized-darcula mono-amber elic  desert  apathy  darcula urple warm-neon unikitty-dark elementary  solarized-dark-higher-contrast pico)
L2=${#dark_theme[*]}
# echo -e "L2 = ${L2}\n"
index2=$(((${RANDOM} % ${L2}+1)))
# echo -e "index2 = ${index2}\n"

hour=`date +%H`
# hour=date | awk '{print $5}' | awk -F: '{print $1}'


# echo   "hour = ${hour}"
# echo  ${light_theme[1]}

if (( ${hour}>=7 && ${hour} < 23 ))
then
    # echo -e "现在是白天\n"
    # echo -e "index1 = ${index1}\n"
    # theme.sh ${light_theme[index1]}
    theme.sh novel
    # echo  "白天主题: ${light_theme[index1]}"
else
    # echo -e "现在是晚上\n"
    # theme.sh ${dark_theme[index2]}
    theme.sh solarized-dark
    theme.sh selenized-dark
    # echo  "暗夜主题: ${dark_theme[index1]}"
fi
#<<<<<<


export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion



